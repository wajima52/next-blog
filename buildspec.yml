version: 0.2

env:
  secrets-manager:
    CONTENTFUL_ACCESS_TOKEN: ${SECRET_ID}:CONTENTFUL_ACCESS_TOKEN
    CONTENTFUL_SPACE: ${SECRET_ID}:CONTENTFUL_SPACE
    CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${SECRET_ID}:CONTENTFUL_PREVIEW_ACCESS_TOKEN
    CONTENTFUL_PREVIEW_SECRET: ${SECRET_ID}:CONTENTFUL_PREVIEW_SECRET
    DOCKERHUB_USER	: ${SECRET_ID}:DOCKERHUB_USER
    DOCKERHUB_PASSWORD: ${SECRET_ID}:DOCKERHUB_PASSWORD

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin $AWS_ECR_URI
      - echo ${DOCKERHUB_PASSWORD} | docker login --username $DOCKERHUB_USER --password-stdin
      - REPO=$(aws ecr describe-repositories --repository-names "next-blog" --output text --query "repositories[0].repositoryUri")
      - IMAGE=$(echo $REPO):latest
  build:
    commands:
      - echo Build started on `date`
      - docker build -t $IMAGE -f Dockerfile.production --build-arg CONTENTFUL_SPACE=${CONTENTFUL_SPACE} --build-arg CONTENTFUL_ACCESS_TOKEN=${CONTENTFUL_ACCESS_TOKEN} --build-arg CONTENTFUL_PREVIEW_ACCESS_TOKEN=${CONTENTFUL_PREVIEW_ACCESS_TOKEN} --build-arg CONTENTFUL_PREVIEW_SECRET=${CONTENTFUL_PREVIEW_SECRET} .
      - docker push $IMAGE
  post_build:
    commands:
      - printf '[{"name":"example","imageUri":"%s"}]' $IMAGE > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json

